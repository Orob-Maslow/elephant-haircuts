[virtual_sdcard]
path: /home/pi/printer_data/gcodes
on_error_gcode: CANCEL_PRINT

# This file is for MP3DP Serial number 000014 home built from plans from V1engineering and modified for a larger bed v4.1 build:
# - Config : {
#   - Usable : { X : 300, Y : 300, Z : 390 },
#   - Controller : BTT Octopus v1.0
#     - EndStops : PG6, PG9, PG10, PG11, PG12, PG13, PG14, PG15
#   - Extruder-HotEnd : BIQU H2 V2s Extruder
#     - Thermistor Type : Semitec 104NT-4-R025H42G(NTC100K)
#   - Probe : ANTCLABS BLTouch Bed Leveling Sensor v3
#     - Wiring info @ https://www.antclabs.com/wiring
# 

# Content is based on asa B2C's github printer config file as a tempate.  Some reference to the voron 2.4 config file
# from various specs, as well as Klipper and V1E forum members


# Related:
# - See docs/Config_Reference.md for a description of parameters.
# - https://www.klipper3d.org/Config_Reference.html
# - https://github.com/bigtreetech/BIGTREETECH-OCTOPUS-V1.0/blob/master/Firmware/Klipper/generic-bigtreetech-octopus.cfg
# - https://github.com/bigtreetech/BIGTREETECH-OCTOPUS-V1.0/blob/master/Octopus%20works%20on%20Voron%20v2.4/Firmware/Klipper/BTT_OctoPus_Voron2_Config.cfg
# - https://github.com/VoronDesign/Voron-Trident/blob/main/Firmware/Octopus/Trident_Octopus_Config.cfg
# - EBB36 Pinout diagram https://github.com/bigtreetech/EBB/blob/master/EBB%20CAN%20V1.1%20(STM32G0B1)/EBB36%20CAN%20V1.1/Hardware/EBB36%20CAN%20V1.1%26V1.2-PIN.png
# - gpagnozzi's printer.cfg for his V1E MP3DP v4 build, see https://forum.v1e.com/t/mp3dp-v4-build-sw-virginia/37238/31?u=azab2c
# - probrwr's printer.cfg for his V1E MP3DP v4 build, see https://forum.v1e.com/t/mp3dp-v4-build-sw-virginia/37238/104?u=azab2c

[include mainsail.cfg]
[include timelapse.cfg]
[include adxl.cfg]
[include K-ShakeTune/*.cfg]
#[include plasma.cfg]
#[include mpu6050.cfg]
    
###############################################################################################################################################
# MCUs
########################################

#[mcu]
[mcu]
serial: /dev/serial/by-id/usb-Klipper_stm32f446xx_230025001650535556323420-if00
restart_method: command  #AZA commented because of https://github.com/Arksine/CanBoot/issues/72#issuecomment-1502495476

# basic printer style layout
[printer]
# Related
kinematics: corexy
max_velocity: 400 # default: 300
max_accel: 3500 #AZA default: 3000
max_z_velocity: 200 # default: 5
max_z_accel: 300 # default: 100
square_corner_velocity: 5 # set to default of 5 for input shaping

########################################
# TMC2209 configuration
# - Set uart_pin to CS pin, per pinout diag
########################################

[tmc2209 extruder]
uart_pin: PE4
run_current: 0.8
hold_current: 0.3
stealthchop_threshold: 0 #999999

[tmc2209 stepper_x]
uart_pin: PC4
#diag_pin: PG6
run_current: 0.9 #AZA was 0.8
hold_current: 0.3
interpolate: False  #AZA Why??? Default True, but gpagnozzi False (note his is Manta M8P not Octopus), see https://www.klipper3d.org/Config_Reference.html?h=pixel#tmc2209 and https://forum.v1e.com/t/mp3dp-v4-build-sw-virginia/37238/31?u=azab2c
stealthchop_threshold: 0 #999999

[tmc2209 stepper_y]
uart_pin: PD11
#diag_pin: PG9
run_current: 0.9 #AZA was 0.8
hold_current: 0.3
interpolate: False
stealthchop_threshold: 0 # 999999

[tmc2209 stepper_z]
uart_pin: PC6
#diag_pin: PG10
run_current: 0.8
hold_current: 0.4
interpolate: False
stealthchop_threshold: 0 #999999

[tmc2209 stepper_z1]
uart_pin: PC7
#diag_pin: PG11
run_current: 0.8
hold_current: 0.4
interpolate: False
stealthchop_threshold: 0 #999999

[tmc2209 stepper_z2]
uart_pin: PF2
#diag_pin: PG12
run_current: 0.8
hold_current: 0.4
interpolate: False
stealthchop_threshold: 0 #999999

# driver 5 : uart_pin: PE4
# driver 6 : uart_pin: PE1
# driver 7 : PD3

###############################################################################################################################################
# motor definitions
################################################

# Driver0  This is the B motor on the left side

[stepper_x]
enable_pin: !PF14
step_pin: PF13
dir_pin: !PF12
endstop_pin: PG6 ##carriage trigger
microsteps: 16
rotation_distance: 32
position_endstop: -5
position_max: 297
position_min: -5.0
homing_speed: 100
second_homing_speed: 3

# Driver1  this is the A motor on the right side

[stepper_y]
enable_pin: !PF15
step_pin: PG0
dir_pin: !PG1
endstop_pin: PG9 #left motor
microsteps: 16
rotation_distance: 32
position_endstop: 295
position_max: 295
position_min: -5.0
homing_speed: 100
second_homing_speed: 3

## Driver2 for 1 of 3 z motors
#(front left)

[multi_pin z_enable]
pins: !PG5, PA9 #PG14

[stepper_z]
enable_pin: multi_pin:z_enable
step_pin: PF11
dir_pin: PG3
microsteps: 16
rotation_distance: 32
endstop_pin: probe:z_virtual_endstop
position_max: 400
position_min: -5.0
homing_speed: 50
second_homing_speed: 3
homing_retract_dist: 2

## Driver3 for 2 of 3 z motors
#(rear)

[stepper_z1]
enable_pin: !PA0
step_pin: PG4
dir_pin: !PC1
microsteps: 16
rotation_distance: 32
endstop_pin: probe:z_virtual_endstop

## Driver4 for 3 of 3 z motors
#(front right)

[stepper_z2]
enable_pin: !PG2
step_pin: PF9
dir_pin: PF10
microsteps: 16
rotation_distance: 32
endstop_pin: probe:z_virtual_endstop

#--------------------------------------------------

########################################
# EXTRUDER
########################################

## Driver 5 for extrusion - located on trolley hot end carrier behind part cooling fan

[extruder] # https://www.klipper3d.org/Config_Reference.html#extruder
step_pin: PC13
dir_pin: PF0
enable_pin: !PF1
microsteps: 16
max_extrude_only_distance: 301.0

################################
## CALIBRATE EXTRUSION

# This number was the first used.  the default is 3.433, which would increase the extrusion... maybe less would be better, so the number should increase?
#rotation_distance: 3.484    #3.433 is the number shown online.  if the number increases, this would underextrude
rotation_distance: 3.4335 #.352 was calculated
nozzle_diameter: 0.600
filament_diameter: 1.750

# Related:
# - https://www.klipper3d.org/Config_Reference.html#maxxxxxx-temperature-sensors
## hot end information  
heater_pin: PB11  # HE3
sensor_type: EPCOS 100K B57560G104F #Generic 3950 #ATC Semitec 104NT-4-R025H42G
sensor_pin: PF4 # THermistor #0 connector

# BIQU H2S Spec sheet says "Semitec 104NT-4-R025H42G(NTC100K)"  #Generic 3950 #EPCOS 100K B57560G104F
#pid_Kp: 21.527
#pid_Ki: 1.063
#pid_Kd: 108.982
min_temp: 0
max_temp: 280
min_extrude_temp: 20
pressure_advance: 0.015 ;  Default = pressure_advance = 0

#[gcode_macro M600]
#description: Filament change

################################################
# MACRO to Unload Filament
[gcode_macro Unload]
gcode:
  # check if homed and fake home if necessary
  # if print is paused, save XYZ location and temperature settings
  #G28
  #G1 Z25 F360
  #G1 X165 Y165 F7200
  M109 S220
  G91 ; Set positioning to Relative
  G1 E5 F120
  G1 E-605 F3600  # backs out filament from extruder
  G1 E-50 F360
  G92 E0 ; Reset xtruder
  #G1 X0 Y0 ; Park print head
  #  if print must resume, maintain temperature or shut it off
  M106 S0 ; Turn off part fan
  M104 S0 ; Set nozzle temp to zero
  M140 S0 ; set bed temp to zero
  #M84 X Y E ; Disable X Y and E 

################################################
# MACRO Load Filament
[gcode_macro Load]
gcode:
; Load filament
  #G28
  #G1 Z25 F360
  #G1 X165 Y165 F7200
  M109 S220
  G92 E0
  G91 ; Set positioning to Relative
  G1 E600 F3600
  G1 E50 F360
  G92 E0 ; Reset Extruder
  #G1 X0 Y0 ; Park print head
  M106 S0 ; Turn off part fan
  M104 S0 ; Set nozzle temp to zero
  M140 S0 ; set bed temp to zero
  #M84 X Y E ; Disable X Y and E steppers 
#----------------------------------------------------------------------------------------------------------------------------------------------

###############################################################################################################################################
# Bed Heater
########################################

[heater_bed]
# Check what thermistor type you have. See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types.
heater_pin: PA1  # built in board heat 
sensor_pin: PF3 # Thermistor #0   
#max_power: 0.6 #AZA: From Voron...  Adjust Max Power so your heater doesn't warp your bed. Rule of thumb is 0.4 watts / cm^2 .
sensor_type: EPCOS 100K B57560G104F #AZA
#control: pid
#pid_Kp: 54.027
#pid_Ki: 0.770
#pid_Kd: 948.182
min_temp: 0  #
max_temp: 130 #
#----------------------------------------------------------------------------------------------------------------------------------------------

###################################
# macros for heating bed and hot end

[gcode_macro M109]
rename_existing: M99109
gcode:
    #Parameters
    {% set s = params.S|float %}
    
    M104 {% for p in params %}{'%s%s' % (p, params[p])}{% endfor %}  ; Set hotend temp
    {% if s != 0 %}
        TEMPERATURE_WAIT SENSOR=extruder MINIMUM={s} MAXIMUM={s+1}   ; Wait for hotend temp (within 1 degree)
    {% endif %}

[gcode_macro M190]
rename_existing: M99190
gcode:
    #Parameters,    
    {% set s = params.S|float %}

    M140 {% for p in params %}{'%s%s' % (p, params[p])}{% endfor %}   ; Set bed temp
    {% if s != 0 %}
        TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={s} MAXIMUM={s+1}  ; Wait for bed temp (within 1 degree)
    {% endif %}   
    
###############################################################################################################################################
# Bed Mesh
########################################

# https://www.klipper3d.org/Config_Reference.html?h=pixel#bed-level-support
[bed_mesh]
speed: 150
horizontal_move_z: 8
mesh_min: 40,40  #bed is 295
########################### Measure this ####################
mesh_max: 250,250 # Bed max size minus probe X/Y offset
#############################################################
probe_count: 5,5
algorithm: bicubic #lagrange
mesh_pps: 4, 4 #1, 1
bicubic_tension: .5 #.5
move_check_distance: 5 #10
split_delta_z: .025
fade_start: 1
fade_end: 8
fade_target: 0

#---------------------------------------------------------------------------------------------------------------------------------------------
######################################
# Bed Mesh 
######################################

[gcode_macro MAKE_MESH]
gcode:
    BED_MESH_PROFILE LOAD=default
    BED_MESH_CLEAR
    BED_MESH_CALIBRATE 
    
############################################
# load bed mesh depending on bed temperature
############################################

[gcode_macro LOAD_MESH]
gcode:
    {% set bed_temp = params.BED_TEMP|default(60)|float %}
    {% if bed_temp >= 75 %}
        BED_MESH_PROFILE LOAD=mesh80
        {% if bed_temp >= 110 %}
            BED_MESH_PROFILE LOAD=mesh110
        {% endif %}
    {% elif bed_temp < 35 %}
            BED_MESH_PROFILE LOAD=mesh20
    {% else %}
        {% if bed_temp >= 35 %}
            BED_MESH_PROFILE LOAD=mesh40
        {% endif %}
    {% endif %} 
    #M140 S1 # bed mesh ON  -->> this is the same as BED_MESH_PROFILE LOAD=

###############################################################################################################################################
# Z Bed Probe #
################################################

[safe_z_home]
home_xy_position: 150, 150 # Change coordinates to the center of your print bed
speed: 150
#z_hop: 10                 # Move up 10mm
#z_hop_speed: 8

#[probe] #IR arduino object sensor
#pin: !PB7 #(for z stop or PB7 for BLtouch pin)
#z_offset: 15

[force_move] 
enable_force_move: true 

[bltouch]
sensor_pin: ^PB7 # BLTouch Probing input signal pin (^ means pullup)
control_pin: PB6 # SERVO pwm output pin for pin movement
x_offset: -27 # measured offset for H2V2S and hot end fan mounted bl touch
y_offset: -31
#z_offset: 3.575  # this is critical for the first layer print!!! 
                  # PLA (3.6 base is too thick, 3.8 was too thin on part except right rear corner...)
                  # PETG too far a bit
speed: 7.5
samples: 2
sample_retract_dist: 8
#stow_on_each_sample: True #AZA False saves time between probes, but risk hitting/damaging Probe.  Only use if confident breakage risk is low...
probe_with_touch_mode: True

###################################################
# Macros for homing / safe moves

[gcode_macro  FAKE_Z]  
# this homes the machine to move it without actually using end stops
gcode:
  SET_KINEMATIC_POSITION Z=0

[gcode_macro MOVE_SAFE]
description: Move to safe Z position so bed doesn't crash on reset.
gcode:
  G0 Z390 F6000
  
#-------------------------------------------------

###################################################
# Bed Leveling
###################################################
[z_tilt]
# positions are where the bed pivot points are attached
z_positions:  
    -25,  90
    125, 335
    325,  90
speed: 150
horizontal_move_z: 8
retries: 4
retry_tolerance: 0.1 #0.04
# points are where the bed is probed for the tilt measurement
points:
    60, 90
    140, 290
    290, 90
#---------------------------------------------------------------------------------------------------------------------------------------------

###############################################################################################################################################
# Fans
########################################

[fan]
#pin: PA6 # print cool fan #0
pin: PD12 # print cool fan #0
max_power: 0.8
shutdown_speed: 0
cycle_time: 0.010
#hardware_pwm: False
kick_start_time: 0.100
off_below: 0.1
#tachometer_pin:
#tachometer_ppr: 2
#tachometer_poll_interval: 0.0015
#enable_pin:

[heater_fan hotend_fan]
pin: PE5 #hot end fan #1
heater: extruder
heater_temp: 50.0

#[heater_fan fan2] #controller fan
#pin: PD12
[heater_fan fan3] #heat sink fan
pin: PD13
#[heater_fan fan4]
#pin: PD14
#[controller_fan fan5]
#pin: PD15
#----------------------------------------------------------------------------------------------------------------------------------------------

###############################################################################################################################################
# EXTRA Sensors / Actuators 
#########################################
##[temperature_sensor strategic_sensor]
##sensor_type: EPCOS 100K B57560G104F #Generic 3950
##sensor_pin: PF5
#pullup_resistor: 4700
#inline_resistor: 4700

[input_shaper]
shaper_freq_x: 44.6
shaper_type_x: mzv
shaper_freq_y: 44.6
shaper_type_y: mzv

#[input_shaper]
#shaper_freq_x: 75.8
#shaper_type_x: mzv
#shaper_freq_y: 75.8
#shaper_type_y: mzv

# probrwr's [input_shaper]
#[input_shaper]
#shaper_freq_x: 106.8
#shaper_type_x: zv
#shaper_freq_y: 55.6
#shaper_type_y: mzv

#[led status_led]
#green_pin: EBBCan: PA13
#cycle_time: 4.0
#initial_GREEN: 0.5

#[adxl345]
#cs_pin: PA15
#spi_bus: spi3

#[resonance_tester]
#accel_chip: adxl345
#accel_chip: mpu9250
#probe_points:
#    150,150,200  # an example

################################################
#EXTRA lighting
################################################
## Chamber Lighting - HE2 Connector (24V)
[output_pin caselight]
pin: PB10
pwm:true
shutdown_value: 0
value: 0.25                             #the brightness at startup (0-1)
cycle_time: 0.01
#----------------------------------------------------------------------------------------------------------------------------------------------

###############################################################################################################################################
# Filament runout switch and sensor
###############################################

[filament_switch_sensor switch_sensor]
switch_pin: ^PG13
pause_on_runout: False
runout_gcode:
  PAUSE # [pause_resume] is required in printer.cfg
  M117 Filament switch runout
  #{action_respond_info("RUNOUT: Toolhead Filament runout")}
 
insert_gcode:
  M117 Filament switch inserted
  #{action_respond_info("RUNOUT: Toolhead Filament inserted")}
  #event_delay: 3.0
  #pause_delay: 0.5

[filament_motion_sensor encoder_sensor]
switch_pin: ^PG12
detection_length: 14 ;2.88
extruder: extruder
pause_on_runout: False
runout_gcode:
  #{action_respond_info("RUNOUT: Filament runout")}
  PAUSE # [pause_resume] is required in printer.cfg
  M117 Filament encoder runout
insert_gcode:
  M117 Filament encoder inserted 
  #{action_respond_info("RUNOUT: Filament inserted")}
#----------------------------------------------------------------------------------------------------------------------------------------------
###########################################################
#Macros for filament sensor

[delayed_gcode ENABLE_FILAMENT_SENSOR]
initial_duration: 1
gcode:
    ENABLE_FILAMENT_SENSOR_NO_DELAY E={params.E}

[gcode_macro ENABLE_FILAMENT_SENSOR_NO_DELAY]
gcode:
    {% set enabled = params.E %}
    SET_FILAMENT_SENSOR SENSOR=switch_sensor ENABLE={enabled}
    SET_FILAMENT_SENSOR SENSOR=encoder_sensor ENABLE={enabled}
#####################################################################
# 	Macros for filament sensor BBT SFS v2
#####################################################################

[gcode_macro SET_FILAMENT_SENSOR]
description: Sets the filament sensor on/off and save value to file
rename_existing: SET_FILAMENT_SENSOR_BASE
gcode:
  {% if printer.save_variables.variables.filament_sensor is not defined %}
    #
    {% set filament_sensor = {params.SENSOR|int: params.ENABLE|int} %}
  {% else %}
    {% set filament_sensor = printer.save_variables.variables.filament_sensor %}
    ;{% set _dummy = filament_sensor.update({params.SENSOR|string: params.ENABLE|int}) %}
  {% endif %}
  SET_FILAMENT_SENSOR_BASE SENSOR={params.SENSOR} ENABLE={params.ENABLE}
  SAVE_VARIABLE VARIABLE=filament_sensor VALUE="{filament_sensor}"

[gcode_macro _RESTORE_FILAMENT_SENSOR]
description: Restore the filament sensor on/off state at klipper start
gcode:
  {% if printer.save_variables.variables.filament_sensor is defined %}
    {% for sensor in printer.save_variables.variables.filament_sensor %}
       SET_FILAMENT_SENSOR_BASE SENSOR={sensor} ENABLE={printer.save_variables.variables.filament_sensor[sensor]}
    {% endfor %}
  {% endif %}
  
[gcode_macro M600]
description: Filament change
gcode: PAUSE Y=10   ; everything needed is defined there

#[delayed_gcode DISABLEFILAMENTSENSOR] ; This will disable the SFS 1 second after klipper starts
#initial_duration: 1
#gcode:
#SET_FILAMENT_SENSOR SENSOR=encoder_sensor ENABLE=0 

[gcode_macro SFS_ENABLE]
description: Enable smart filament sensor
gcode:
  #G92 E0
  M117 ENABLING the Smart Filament Sensor
  SET_FILAMENT_SENSOR SENSOR=encoder_sensor ENABLE=1

[gcode_macro SFS_DISABLE]
description: Disable smart filament sensor
gcode:
  M117 DISABLING the Smart Filament Sensor
  #G92 E0
  SET_FILAMENT_SENSOR SENSOR=encoder_sensor ENABLE=0 ; Put your filament sensor's name after SENSOR=

[delayed_gcode DISABLEFILAMENTSENSOR] ; This will disable the SFS 1 second after klipper starts
initial_duration: 1
gcode:
  SET_FILAMENT_SENSOR SENSOR=encoder_sensor ENABLE=0 ; Put your filament sensor's name after SENSOR=
#----------------------------------------------------------------
###############################################################################################################################################
# FIRMWARE RETRACTION
########################################

[firmware_retraction]
retract_length: 0.2
retract_speed: 20
#retract_length: 2
#retract_speed: 40  #AZA probrwr uses 40

[virtual_sdcard]
path: /home/pi/printer_data/gcodes

[skew_correction]
  #Print a cube or square for an axis of interest
  # i printed a flat-walled cal square box with 2 base and 0 top layers and 1 side layer in vase mode 20 mm high and measured XY plane
  # if adding YZ or XZ plane, the cube should be the same height as the width and depth
  # laying flat it will look like this
  
  #B  C
  #A  D

  # where AB is Y print axis and AD is X print axis when in the printing position still stuck to the plate (label it)
  # could print with AB as Z and AD as Y or X so a total of 3 prints or do it as one print....
  # record the lengths like below for a 100 mm open cube
  #Length AC = 139.23
  #Length BD = 140.49
  #Length AD = 99.3
  #in the console enter the following commands one by one
  #SET_SKEW XY=139.23,140.49,99.3 
  #SET_SKEW XY=141.417,141.426,99.498
  #CALC_MEASURED_SKEW AC=139.23 BD=140.49 AD=99.3  #this one is optional, just gives an idea of how far off it is
  ## response from system:  Calculated Skew: -0.009009 radians, -0.52 degrees
  #SKEW_PROFILE SAVE=my_skew_profile
  ## response from system: 
  ## Skew Correction state has been saved to profile [my_skew_profile]
  ## for the current session. The SAVE_CONFIG command will
  ## update the printer config file and restart the printer.
  #SAVE_CONFIG # system then restarts
  
#[force_move]
#enable_force_move: False
#   Set to true to enable FORCE_MOVE and SET_KINEMATIC_POSITION
#   extended G-Code commands. The default is false.
#----------------------------------------------------------------------------------------------------------------------------------------------

#######################################
#Mini LCD with backlighted pushbutton
######################################

#[board_pins]
#aliases:
#    # EXP1 header
#    EXP1_1=PE8, EXP1_2=PE7,
#    EXP1_3=PE9, EXP1_4=PE10,
#    EXP1_5=PE12, EXP1_6=PE13,    # Slot in the socket on this side
#    EXP1_7=PE14, EXP1_8=PE15,
#    EXP1_9=<GND>, EXP1_10=<5V>,

    # EXP2 header
 #   EXP2_1=PA6, EXP2_2=PA5,
#    EXP2_3=PB1, EXP2_4=PA4,
#    EXP2_5=PB2, EXP2_6=PA7,      # Slot in the socket on this side
#    EXP2_7=PC15, EXP2_8=<RST>,
#    EXP2_9=<GND>, EXP2_10=PC5

# See the sample-lcd.cfg file for definitions of common LCD displays.
#----------------------------------------------------------------------------------------------------------------------------------------------

##  mini12864 LCD Display
#[display]
#lcd_type: uc1701
#cs_pin: EXP1_3
#a0_pin: EXP1_4
#rst_pin: EXP1_5
#encoder_pins: ^EXP2_5, ^EXP2_3
#click_pin: ^!EXP1_2
#contrast: 63
#spi_software_miso_pin: EXP2_1
#spi_software_mosi_pin: EXP2_6
#spi_software_sclk_pin: EXP2_2

##  To control Neopixel RGB in mini12864 display
#[neopixel btt_mini12864]
#pin: EXP1_6
#chain_count: 3
#initial_RED: 0.1
#initial_GREEN: 0.5
#initial_BLUE: 0.8
#color_order: RGB

##  Set RGB values on boot up for each Neopixel. 
##  Index 1 = display, Index 2 and 3 = Knob
#[delayed_gcode setdisplayneopixel]
#initial_duration: 1
#gcode:
#        SET_LED LED=btt_mini12864 RED=1 GREEN=0 BLUE=1 INDEX=2 TRANSMIT=0
#        SET_LED LED=btt_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=2 TRANSMIT=0
#        SET_LED LED=btt_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=3 
#----------------------------------------------------------------------------------------------------------------------------------------------

###############################################################################################################################################
# MACROS for Start / Stop / Pause
#############################
  
[idle_timeout]
timeout: 900
gcode:
  TURN_OFF_HEATERS
  
  # Turn off bed, extruder, and fan
  M140 S0
  M104 S0
  M106 S0
  
  # Ensure skew compensation turned off
  SET_SKEW CLEAR=1
  
  # Move to safe position
  #G1 X300 Y300 Z390 F7000
  MOVE_SAFE
  # NEVER Disable steppers to avoid bed drop
  #M84
  
[save_variables]
filename: ~/variables.cfg
#   Required - provide a filename that would be used to save the
#   variables to disk e.g. ~/variables.cfg

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
gcode:
  PAUSE_BASE
  _TOOLHEAD_PARK_PAUSE_CANCEL

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  # G92 X and Y Here?
  ##### read extrude from  _TOOLHEAD_PARK_PAUSE_CANCEL  macro #####
  {% set extrude = printer['gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL'].extrude %}
  #### get VELOCITY parameter if specified ####
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    M83
    G1 E{extrude} F2100
    {% if printer.gcode_move.absolute_extrude |lower == 'true' %} M82 {% endif %}
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}  
  RESUME_BASE {get_params}

[gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL]
description: Helper: park toolhead used in PAUSE and CANCEL_PRINT
variable_extrude: 1.0
gcode:
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set x_park = printer.toolhead.axis_minimum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_minimum.y|float - 5.0 %}
  {% set z_park_delta = 2.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - z_park_delta) %}
    {% set z_safe = z_park_delta %}
  {% else %}
    {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    M83
    G1 E-{extrude} F2100
    {% if printer.gcode_move.absolute_extrude |lower == 'true' %} M82 {% endif %}
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G91
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
    {% if printer.gcode_move.absolute_coordinates|lower == 'false' %} G91 {% endif %}
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %}

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
variable_park: True
gcode:
  ## Move head and retract only if not already in the pause state and park set to true
  {% if printer.pause_resume.is_paused|lower == 'false' and park|lower == 'true'%}
    _TOOLHEAD_PARK_PAUSE_CANCEL
  {% endif %}
  TURN_OFF_HEATERS
  CANCEL_PRINT_BASE
  #SFS_DISABLE

######################################
# Start GCode
######################################
[gcode_macro START_PRINT]
gcode:
      SKEW_OFF
      G90
      # messages for the LCD display
      M117 Starting bed heater
      M140 S{params.BED_TEMP|default(40)}
      M117 HOMING
      G28 X Y Z; home all axes
      M117 Z-offset
      G1 Z10 F5000 ; lift nozzle
      M117 Z tilt
      Z_TILT_ADJUST ; level the bed
      # this is for mesh checking
      #BED_MESH_PROFILE LOAD=default
      #LOAD_MESH ;load the mesh based on the bed temperature
      # create mesh 5x5
      MAKE_MESH
      M117 carriage front left
      G0 X15 Y15 Z10 F5000 ; wait for heat
      
      #Heat nozzle and bed
      M117 Heat Bed
      M190 S{params.BED_TEMP|default(40)}    ;bed heating   should keep going until the M116 wait for heat soak command halts                      
      M117 Heat nozzle
      M109 S{params.EXTRUDER_TEMP|default(215)} ;hot end heating  
      M117 Extruder Ready
      
      #Precondition extruder
      #SFS_ENABLE

      G92 E0              
      G1 Z2.0 F600        
      G1 Z0.2 F600        
      G1 Z2.0 F600
      M117 Prime Line
     
      #Prime line
      PRIME_LINE

      #turn on skew correction
      SKEW_ON
      
      #Turn on smart Filament sensor 
      #SFS_ENABLE
      
      M117 Printing...

######################################
# Skew Correction

[gcode_macro SKEW_ON]
gcode:
   SKEW_PROFILE LOAD=johnny5_skew_profile
  
[gcode_macro SKEW_OFF]
gcode:
  SET_SKEW CLEAR=1
#-------------------------------------

######################################
# Prime line

[gcode_macro PRIME_LINE]
gcode: 
    M117 Prime Line
    G92 E0 ;Reset Extruder
    # move z axis 
    G1 Z3.6 F3000 ;Move Z Axis up
    # move to prime position 
    G1 X0 Y85 Z2 F5000.0 ;Move to start position
    G1 X0 Y200.0 Z0.35 F1500.0 E15 ;Draw the first line
    G1 X3 Y200.0 Z0.35 F5000.0 ;Move to side a little
    G1 X3 Y85 Z0.35 F1500.0 E30 ;Draw the second line
    G92 E0 ;Reset Extruder
    G1 Z4.0 F3000 ;Move Z Axis up
#-------------------------------------

######################################
# End Gcode
######################################
[gcode_macro END_PRINT]
gcode:
    SKEW_OFF  ;what is this???

    #SFS_DISABLE
    # Turn off bed, extruder, and fan
    
    M140 S0 # bed off
    M104 S0 # nozzle off
    M106 S0 # fan off?
    # Move nozzle away from print while retracting
    G91  # move relative to current position
    G1 E-1 # retract
    G1 Z10 F3000 # drop bed by 10mm
    G90  # move to absolue coordinate positions
    M117 Dropping Bed Now
    G1 X265 Y265 Z380 F7000
    G1 E-1 F100
     # NEVER Disable steppers to avoid bed drop
    #M84
    M117 COMPLETE

###############################################################################################################################################
###############################################################################################################################################
# TUNING MACROS
###############################################################################################################################################
###############################################################################################################################################

# Home, get position, throw around toolhead, home again.
# If MCU stepper positions (first line in GET_POSITION) are greater than a full step different (your number of microsteps), then skipping occured.
# We only measure to a full step to accomodate for endstop variance.
# Example: TEST_SPEED SPEED=300 ACCEL=5000 ITERATIONS=10

[gcode_macro TEST_SPEED]
gcode:
	# Speed
	{% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}
	# Iterations
	{% set iterations = params.ITERATIONS|default(5)|int %}
	# Acceleration
	{% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}
	# Bounding inset for large pattern (helps prevent slamming the toolhead into the sides after small skips, and helps to account for machines with imperfectly set dimensions)
	{% set bound = params.BOUND|default(20)|int %}
	# Size for small pattern box
	{% set smallpatternsize = SMALLPATTERNSIZE|default(20)|int %}
	
	# Large pattern
		# Max positions, inset by BOUND
		{% set x_min = printer.toolhead.axis_minimum.x + bound %}
		{% set x_max = printer.toolhead.axis_maximum.x - bound %}
		{% set y_min = printer.toolhead.axis_minimum.y + bound %}
		{% set y_max = printer.toolhead.axis_maximum.y - bound %}
	
	# Small pattern at center
		# Find X/Y center point
		{% set x_center = (printer.toolhead.axis_minimum.x|float + printer.toolhead.axis_maximum.x|float ) / 2 %}
		{% set y_center = (printer.toolhead.axis_minimum.y|float + printer.toolhead.axis_maximum.y|float ) / 2 %}
		
		# Set small pattern box around center point
		{% set x_center_min = x_center - (smallpatternsize/2) %}
		{% set x_center_max = x_center + (smallpatternsize/2) %}
		{% set y_center_min = y_center - (smallpatternsize/2) %}
		{% set y_center_max = y_center + (smallpatternsize/2) %}

	# Save current gcode state (absolute/relative, etc)
	SAVE_GCODE_STATE NAME=TEST_SPEED
	
	# Output parameters to g-code terminal
	{ action_respond_info("TEST_SPEED: starting %d iterations at speed %d, accel %d" % (iterations, speed, accel)) }
	
	# Home and get position for comparison later:
		G28
		# QGL if not already QGLd (only if QGL section exists in config)
		{% if printer.configfile.settings.quad_gantry_level %}
			{% if printer.quad_gantry_level.applied == False %}
				QUAD_GANTRY_LEVEL
				G28 Z
			{% endif %}
		{% endif %}	
		G90
		G0 X{printer.toolhead.axis_maximum.x-1} Y{printer.toolhead.axis_maximum.y-1} F{30*60}
		G4 P1000 
		GET_POSITION

	# Go to starting position
	G0 X{x_min} Y{y_min} Z{bound + 10} F{speed*60}

	# Set new limits
	SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel}

	{% for i in range(iterations) %}
		# Large pattern
			# Diagonals
			G0 X{x_min} Y{y_min} F{speed*60}
			G0 X{x_max} Y{y_max} F{speed*60}
			G0 X{x_min} Y{y_min} F{speed*60}
			G0 X{x_max} Y{y_min} F{speed*60}
			G0 X{x_min} Y{y_max} F{speed*60}
			G0 X{x_max} Y{y_min} F{speed*60}
			
			# Box
			G0 X{x_min} Y{y_min} F{speed*60}
			G0 X{x_min} Y{y_max} F{speed*60}
			G0 X{x_max} Y{y_max} F{speed*60}
			G0 X{x_max} Y{y_min} F{speed*60}
		
		# Small pattern
			# Small diagonals 
			G0 X{x_center_min} Y{y_center_min} F{speed*60}
			G0 X{x_center_max} Y{y_center_max} F{speed*60}
			G0 X{x_center_min} Y{y_center_min} F{speed*60}
			G0 X{x_center_max} Y{y_center_min} F{speed*60}
			G0 X{x_center_min} Y{y_center_max} F{speed*60}
			G0 X{x_center_max} Y{y_center_min} F{speed*60}
			
			# Small box
			G0 X{x_center_min} Y{y_center_min} F{speed*60}
			G0 X{x_center_min} Y{y_center_max} F{speed*60}
			G0 X{x_center_max} Y{y_center_max} F{speed*60}
			G0 X{x_center_max} Y{y_center_min} F{speed*60}
	{% endfor %}

	# Restore max speed/accel to their configured values
	SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} 

	# Re-home and get position again for comparison:
		G28
		# Go to XY home positions (in case your homing override leaves it elsewhere)
		G90
		G0 X{printer.toolhead.axis_maximum.x-1} Y{printer.toolhead.axis_maximum.y-1} F{30*60}
		G4 P1000 
		GET_POSITION

	# Restore previous gcode state (absolute/relative, etc)
	RESTORE_GCODE_STATE NAME=TEST_SPEED
#----------------------------------------------------------------------------------------------------------------------------------------------
#----------------------------------------------------------------------------------------------------------------------------------------------

#[gcode_macro TEST_MOTION]
#gcode:
#    {% set speed = "F30000" %}
#    G28
#    G0 Z100
#
#    G0 X0 Y245 {speed}
#    G0 X245 Y245 F{speed}
#    G0 X245 Y0 F{speed}
#    G0 X0 Y0 F{speed}
#    G0 X245 Y245 F{speed}
#    G0 X245 Y0 F{speed}
#    G0 X0 Y245 F{speed}
#
#    G0 X0 Y0 F{speed}
#    G0 X245 Y0 F{speed}
#    G0 X245 Y245 F{speed}
#    G0 X0 Y245 F{speed}
#    G0 X245 Y0 F{speed}
#    G0 X0 Y245 F{speed}
#    G0 X0 Y0 F{speed}
#    G0 X245 Y245 F{speed}
#
#    G0 X0 Y0 F{speed}
#------------------------------------------------------------------------------------------------------------------------------------------------------------end macros

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 73.907
#*# pid_ki = 0.785
#*# pid_kd = 1740.516
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 17.044
#*# pid_ki = 0.565
#*# pid_kd = 128.471
#*#
#*# [bed_mesh default_100]
#*# version = 1
#*# points =
#*# 	-0.130451, 0.089549, 0.099549, 0.104549, 0.109549, 0.109549, 0.109549, 0.089549, 0.079549, 0.054549
#*# 	0.059549, 0.079549, 0.099549, 0.114549, 0.124549, 0.134549, 0.139549, 0.129549, 0.129549, 0.119549
#*# 	0.004549, 0.054549, 0.084549, 0.099549, 0.114549, 0.124549, 0.134549, 0.139549, 0.139549, 0.139549
#*# 	-0.030451, 0.014549, 0.059549, 0.089549, 0.114549, 0.134549, 0.149549, 0.159549, 0.164549, 0.164549
#*# 	-0.060451, -0.030451, 0.024549, 0.069549, 0.099549, 0.119549, 0.144549, 0.149549, 0.164549, 0.174549
#*# 	-0.100451, -0.055451, -0.010451, 0.039549, 0.089549, 0.119549, 0.149549, 0.159549, 0.184549, 0.199549
#*# 	-0.160451, -0.100451, -0.055451, -0.000451, 0.054549, 0.099549, 0.134549, 0.149549, 0.174549, 0.189549
#*# 	-0.220451, -0.155451, -0.090451, -0.030451, 0.019549, 0.059549, 0.119549, 0.149549, 0.174549, 0.204549
#*# 	-0.280451, -0.205451, -0.150451, -0.085451, -0.015451, 0.024549, 0.084549, 0.129549, 0.144549, 0.179549
#*# 	-0.255451, -0.255451, -0.175451, -0.120451, -0.030451, 0.004549, 0.059549, 0.124549, 0.159549, 0.204549
#*# x_count = 10
#*# y_count = 10
#*# mesh_x_pps = 4
#*# mesh_y_pps = 4
#*# algo = bicubic
#*# tension = 0.5
#*# min_x = 35.0
#*# max_x = 219.95
#*# min_y = 35.0
#*# max_y = 209.96
#*#
#*# [bed_mesh default_25]
#*# version = 1
#*# points =
#*# 	0.132001, 0.142001, 0.062001, -0.017999, -0.157999
#*# 	0.107001, 0.132001, 0.117001, 0.062001, 0.022001
#*# 	0.052001, 0.122001, 0.127001, 0.132001, 0.042001
#*# 	0.002001, 0.117001, 0.127001, 0.172001, 0.232001
#*# 	-0.097999, 0.047001, 0.147001, 0.212001, 0.247001
#*# min_x = 25.0
#*# max_x = 220.0
#*# min_y = 25.0
#*# max_y = 210.0
#*# x_count = 5
#*# y_count = 5
#*# mesh_x_pps = 4
#*# mesh_y_pps = 4
#*# algo = bicubic
#*# tension = 0.5
#*#
#*# [skew_correction skew_profile_1]
#*# xy_skew = 0.014205811504963698
#*# xz_skew = 0.0
#*# yz_skew = 0.0
#*#
#*# [bltouch]
#*# z_offset = 3.075
#*#
#*# [bed_mesh mesh60]
#*# version = 1
#*# points =
#*# 	0.082411, 0.007411, -0.022589, -0.002589, 0.037411
#*# 	0.272411, 0.147411, 0.027411, 0.007411, 0.047411
#*# 	0.457411, 0.267411, 0.117411, -0.012589, -0.022589
#*# 	0.542411, 0.292411, 0.097411, -0.142589, -0.162589
#*# 	0.487411, 0.212411, -0.052589, -0.342589, -0.452589
#*# min_x = 35.0
#*# max_x = 265.0
#*# min_y = 35.0
#*# max_y = 265.0
#*# x_count = 5
#*# y_count = 5
#*# mesh_x_pps = 4
#*# mesh_y_pps = 4
#*# algo = bicubic
#*# tension = 0.5
#*#
#*# [bed_mesh mesh40]
#*# version = 1
#*# points =
#*# 	0.123515, -0.001485, -0.031485, -0.016485, 0.028515
#*# 	0.303515, 0.153515, 0.073515, -0.016485, 0.033515
#*# 	0.478515, 0.293515, 0.113515, -0.026485, -0.066485
#*# 	0.643515, 0.403515, 0.113515, -0.056485, -0.206485
#*# 	0.723515, 0.363515, -0.021485, -0.241485, -0.451485
#*# min_x = 35.0
#*# max_x = 265.0
#*# min_y = 35.0
#*# max_y = 265.0
#*# x_count = 5
#*# y_count = 5
#*# mesh_x_pps = 4
#*# mesh_y_pps = 4
#*# algo = bicubic
#*# tension = 0.5
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  -0.052827, 0.042173, 0.062173, 0.037173, -0.017827
#*# 	  0.067173, 0.057173, 0.012173, -0.087827, -0.152827
#*# 	  0.202173, 0.077173, -0.067827, -0.247827, -0.382827
#*# 	  0.222173, 0.042173, -0.157827, -0.422827, -0.592827
#*# 	  0.232173, -0.002827, -0.307827, -0.667827, -0.927827
#*# x_count = 5
#*# y_count = 5
#*# mesh_x_pps = 4
#*# mesh_y_pps = 4
#*# algo = bicubic
#*# tension = 0.5
#*# min_x = 40.0
#*# max_x = 250.0
#*# min_y = 40.0
#*# max_y = 250.0
#*#
#*# [bed_mesh mesh80]
#*# version = 1
#*# points =
#*# 	0.047661, 0.027661, 0.007661, -0.042339, 0.027661
#*# 	0.222661, 0.177661, 0.107661, 0.097661, 0.137661
#*# 	0.367661, 0.257661, 0.167661, 0.107661, 0.097661
#*# 	0.437661, 0.287661, 0.137661, -0.012339, -0.042339
#*# 	0.337661, 0.167661, -0.022339, -0.192339, -0.317339
#*# min_x = 35.0
#*# max_x = 265.0
#*# min_y = 35.0
#*# max_y = 265.0
#*# x_count = 5
#*# y_count = 5
#*# mesh_x_pps = 4
#*# mesh_y_pps = 4
#*# algo = bicubic
#*# tension = 0.5
#*#
#*# [skew_correction my_skew_profile]
#*# xy_skew = -0.009009492332535049
#*# xz_skew = 0.0
#*# yz_skew = 0.0
#*#
#*# [bed_mesh 60 July 24]
#*# version = 1
#*# points =
#*# 	0.138918, 0.113918, 0.083918, 0.063918, 0.073918
#*# 	0.903918, 0.813918, 0.708918, 0.648918, 0.583918
#*# 	1.628918, 1.478918, 1.313918, 1.158918, 1.013918
#*# 	2.318918, 2.128918, 1.898918, 1.628918, 1.388918
#*# 	2.958918, 2.648918, 2.313918, 1.978918, 1.778918
#*# x_count = 5
#*# y_count = 5
#*# mesh_x_pps = 4
#*# mesh_y_pps = 4
#*# algo = bicubic
#*# tension = 0.5
#*# min_x = 35.0
#*# max_x = 265.0
#*# min_y = 35.0
#*# max_y = 265.0
#*#
#*# [skew_correction johnny5_skew_profile]
#*# xy_skew = -6.364273860448065e-05
#*# xz_skew = 0.0
#*# yz_skew = 0.0
