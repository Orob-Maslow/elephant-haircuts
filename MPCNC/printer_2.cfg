Klipper setup for skr pro 1.2 on mpcnc

[include mainsail.cfg]
[include timelapse.cfg]
# Specs:
# - SKR 1.2 Pro
# - TMC2209
# - 1.8 stepper on XYZ
# - Dual X
# - Dual Y
# - Dual Physical endstops on X
# - Dual Physical endstops on Y
# - Fysetc Mini 12864 LCD Display v2.1 RGB

[mcu]
serial: /dev/serial/by-id/usb-Klipper_stm32f407xx_410053000451313036333036-if00
#[mcu] 
#serial: /dev/serial/by-id/usb-Klipper_stm32f407xx_12345-if00 

[printer] 
kinematics: cartesian 
max_velocity: 3000 
max_accel: 550 
max_accel_to_decel: 350 
max_z_velocity: 75 
max_z_accel: 150 
square_corner_velocity: 1 

[gcode_arcs] 
resolution: 1

[pause_resume] 
recover_velocity: 50

[skew_correction] 

[display_status] 

#####################################################################
# X Stepper Settings
#####################################################################

[stepper_x]
homing_positive_dir: False
step_pin: PE9
dir_pin: PF1
enable_pin: !PF2
endstop_pin: PB10
homing_retract_dist: 10
microsteps: 32
rotation_distance: 32
full_steps_per_rotation: 200
position_min: -25
position_endstop: -3
position_max: 500
homing_speed: 70.0

[tmc2209 stepper_x]
uart_pin: PC13
diag_pin: PB10
run_current: 0.80
hold_current: 0.800
stealthchop_threshold: 200
#driver_SGTHRS: 120 # 255 is most sensitive value, 0 is least sensitive 

[stepper_x1]
step_pin: PE14
dir_pin: !PA0
enable_pin: !PC3
endstop_pin: PE15
microsteps: 32
rotation_distance: 32
full_steps_per_rotation: 200
#position_min: 0
#position_endstop: 0
#position_max: 250
#homing_speed: 70.0

[tmc2209 stepper_x1]
uart_pin: PD4
diag_pin: PE12
run_current: 0.80
hold_current: 0.800
stealthchop_threshold: 200

#####################################################################
# Y Stepper Settings
#####################################################################

[stepper_y]
homing_positive_dir: False
homing_retract_dist: 10
step_pin: PE11
dir_pin: !PE8
enable_pin: !PD7
endstop_pin: PE12
microsteps: 32
rotation_distance: 32
full_steps_per_rotation: 200
position_min: -30
position_endstop: -19
position_max: 790
homing_speed: 70.0

[tmc2209 stepper_y]
uart_pin: PE3
diag_pin: PE12
run_current: 0.80
hold_current: 0.800
stealthchop_threshold: 200

[stepper_y1]
step_pin: PD15
dir_pin: PE7
enable_pin: !PA3
endstop_pin: PE10
microsteps: 32
rotation_distance: 32
full_steps_per_rotation: 200
#position_min: 0
#position_endstop: 0
#position_max: 225
#homing_speed: 70.0

[tmc2209 stepper_y1]
uart_pin: PD1
diag_pin: PE10
run_current: 0.80
hold_current: 0.800
stealthchop_threshold: 200

#####################################################################
# Z Stepper Settings
#####################################################################

[stepper_z]
step_pin: PE13
dir_pin: PC2
enable_pin: !PC0
endstop_pin: !PG8
microsteps: 32
rotation_distance: 8
full_steps_per_rotation: 200
homing_positive_dir: False
position_endstop: 2
position_max: 90
homing_speed: 5.0
position_min: -75


[tmc2209 stepper_z]
uart_pin: PE1
diag_pin: PG8
run_current: 0.80
hold_current: 0.800
stealthchop_threshold: 100

#####################################################################
# Fans
#####################################################################

#[controller_fan tmc_fan]

[fan_generic tmc_fan]
# stepper fan
pin: PC8

[fan]
#for box
pin: PE5

[temperature_fan pi]
pin: PE6
sensor_type: temperature_host
min_temp: 10
max_temp: 90
control: pid
pid_Kp: 2
pid_Ki: 4
pid_kd: 0.1

#####################################################################
# Display (like one for marlin with a button)
#####################################################################

[board_pins]
aliases:
    EXP1_1=PG4, EXP1_3=PD11, EXP1_5=PG2, EXP1_7=PG6, EXP1_9=<GND>,
    EXP1_2=PA8, EXP1_4=PD10, EXP1_6=PG3, EXP1_8=PG7, EXP1_10=<5V>,
    EXP2_1=PB14, EXP2_3=PG10, EXP2_5=PF11, EXP2_7=PF12,  EXP2_9=<GND>,
    EXP2_2=PB13, EXP2_4=PB12, EXP2_6=PB15, EXP2_8=<RST>, EXP2_10=PF13

# Fysetc Mini 12864 LCD Display
#[display]
#lcd_type: uc1701
#cs_pin: EXP1_3
#a0_pin: EXP1_4
#rst_pin: EXP1_5
#contrast: 63
#encoder_pins: ^EXP2_5, ^EXP2_3
#menu_reverse_navigation: True
#click_pin: ^!EXP1_2
#3spi_software_miso_pin: EXP2_1
#spi_software_mosi_pin: EXP2_6
#spi_software_sclk_pin: EXP2_2
#menu_timeout: 30


##  mini12864 LCD Display
[display]
lcd_type: uc1701
cs_pin: EXP1_3
a0_pin: EXP1_4
rst_pin: EXP1_5
encoder_pins: ^EXP2_5, ^EXP2_3
click_pin: ^!EXP1_2
contrast: 63
spi_software_miso_pin: EXP2_1
spi_software_mosi_pin: EXP2_6
spi_software_sclk_pin: EXP2_2

##  To control Neopixel RGB in mini12864 display
[neopixel btt_mini12864]
pin: EXP1_6
chain_count: 3
initial_RED: 0.1
initial_GREEN: 0.5
initial_BLUE: 0.8
color_order: RGB

##  Set RGB values on boot up for each Neopixel. 
##  Index 1 = display, Index 2 and 3 = Knob
[delayed_gcode setdisplayneopixel]
initial_duration: 1
gcode:
        SET_LED LED=btt_mini12864 RED=1 GREEN=0 BLUE=1 INDEX=2 TRANSMIT=0
#        SET_LED LED=btt_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=2 TRANSMIT=0
#        SET_LED LED=btt_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=3 
#----------------------------------------------------------------------------------------------------------------------------------------------


#####################################################################
# Misc
#####################################################################
[force_move]
enable_force_move: True

[pause_resume]

[virtual_sdcard]
path: ~/printer_data/gcodes

[save_variables]
filename: ~/printer_data/.saved_variables/variables.cfg

[idle_timeout]
timeout: 1800
gcode:
  # TURN_OFF_HEATERS
  
  # # Turn off bed, extruder, and fan
  # M140 S0
  # M104 S0
  # M106 S0
  
  # Ensure skew compensation turned off
  #SET_SKEW CLEAR=1
  
  # Move to safe position
  #G1 X300 Y300 Z390 F7000
  #MOVE_SAFE
  # NEVER Disable steppers to avoid bed drop
  #M84
######################################################################
# Macros to interpret gcode from marlin post processor
######################################################################

# [gcode_macro G00]
# gcode:  
#     G1 {% for p in params %}{'%s%s' % (p, params[p])}{% endfor %}
    
# [gcode_macro G01]
# gcode: 
#     G1 {% for p in params %}{'%s%s' % (p, params[p])}{% endfor %}

# [gcode_macro G02]
# gcode: 
#     G2 {% for p in params %}{'%s%s' % (p, params[p])}{% endfor %}

# [gcode_macro G03]
# gcode: 
#     G2 {% for p in params %}{'%s%s' % (p, params[p])}{% endfor %}

# [gcode_macro G04]
# gcode: 
#     G4 {% for p in params %}{'%s%s' % (p, params[p])}{% endfor %}

# [gcode_macro M05]
# gcode:  
#     M5 {% for p in params %}{'%s%s' % (p, params[p])}{% endfor %}

[gcode_macro DUMP_VARIABLES]
gcode:
    {% set filter_name = params.NAME|default('')|string|lower %}
    {% set filter_value = params.VALUE|default('')|string|lower %}
    {% set show_cfg = params.SHOW_CFG|default(0)|int %}
    
    {% set out = [] %}

    {% for key1 in printer %}
        {% for key2 in printer[key1] %}
            {% if (show_cfg or not (key1|lower == 'configfile' and key2|lower in ['config', 'settings'])) and (filter_name in key1|lower or filter_name in key2|lower) and filter_value in printer[key1][key2]|string|lower %}
                {% set dummy = out.append("printer['%s'].%s = %s" % (key1, key2, printer[key1][key2])) %}
            {% endif %}
        {% else %}
            {% if filter_name in key1|lower and filter_value in printer[key1]|string|lower %}
                {% set dummy = out.append("printer['%s'] = %s" % (key1, printer[key1])) %}
            {% endif %}
        {% endfor %}
    {% endfor %}
    
    {action_respond_info(out|join("\n"))}
#[gcode_macro Zero_Z]
#gcode:




[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
gcode:
    # Parameters
    {% set z = params.Z|default(10)|int %}                                                   ; z hop amount

    {% if printer['pause_resume'].is_paused|int == 0 %}
        SAVE_GCODE_STATE NAME=PAUSE                                                          ; save current print position for resume
        BASE_PAUSE                                                                           ; pause print
        G90 
        G1 Z5 F900                                                                     ; raise Z up by z hop amount
        SAVE_GCODE_STATE NAME=PAUSEPARK                                                      ; save parked position in case toolhead is moved during the pause (otherwise the return zhop can error)
        SET_IDLE_TIMEOUT TIMEOUT=86400                                                       ; set timeout to 24 hours
    {% endif %}

    
[gcode_macro RESUME]
rename_existing: BASE_RESUME
variable_zhop: 0
variable_etemp: 0
gcode:
    # Parameters
    
    {% if printer['pause_resume'].is_paused|int == 1 %}
        #INITIAL_RGB                                                                    ; reset LCD color
        SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}  ; set timeout back to configured value
        RESTORE_GCODE_STATE NAME=PAUSEPARK MOVE=1 MOVE_SPEED=100                     ; go back to parked position in case toolhead was moved during pause (otherwise the return zhop can error)
        G91                                                                          ; relative positioning
        M83                                                                          ; relative extruder positioning
        RESTORE_GCODE_STATE NAME=PAUSE MOVE=1 MOVE_SPEED=60                          ; restore position
        BASE_RESUME                                                                  ; resume print
    {% endif %}

[gcode_macro CANCEL_PRINT]
rename_existing: CANCEL_PRINT_BASE
gcode:
    SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout} ; set timeout back to configured value
    CLEAR_PAUSE
    SDCARD_RESET_FILE
    BASE_CANCEL_PRINT

################################################################
# MACROS for CNC
##################################################################

#[gcode_macro SET_TOOLHEAD_OFFSET] 
#gcode: {% set xo = 
#  printer.toolhead.position.x|float %} {% set yo = 
#  printer.toolhead.position.y|float %} {% set zo = 
#  printer.toolhead.position.z|float %} 
#  SET_GCODE_OFFSET x={xo} y={yo} z={zo}

#[gcode_macro CLEAR_TOOLHEAD_OFFSET] 
#gcode: 
#  SET_GCODE_OFFSET x=0 y=0 z=0 

#[gcode_macro TOOL_ON] 
#gcode:
#  SET_PIN PIN=tool_power VALUE=1 
#  SET_PIN PIN=tool_power_led VALUE=1 

#[gcode_macro TOOL_OFF] 
#gcode:
#  SET_PIN PIN=tool_power VALUE=0 
#  SET_PIN PIN=tool_power_led VALUE=0 

[gcode_macro HOME_XY] 
gcode:
  #G28 Z 
  G91
  G0 Z5
  G90
  G28 XY 
  #SET_SKEW XY=1701.8,1700.6875,1200 

[gcode_macro PARK_TOOL] 
gcode: 
  {action_respond_info("*** REMINDER: switch off spindle manually ***")} 
  #TOOL_OFF 
  #CLEAR_TOOLHEAD_OFFSET 
  #G0 Z65 
 # G0 X40 Y50 
 # G1 Z25

[gcode_macro  FAKE_HOME]  
# this homes the machine to move it without actually using end stops
gcode:
  SET_KINEMATIC_POSITION X=0 Y=0 Z=0

[gcode_macro  FAKE_XY]
gcode:
  SET_KINEMATIC_POSITION X=0 Y=0

[gcode_macro  FAKE_Z]
gcode:
  SET_KINEMATIC_POSITION Z=0

[gcode_macro FW_RESTART] 
gcode: 
  FIRMWARE_RESTART 

#[gcode_macro WORKSPACE_1]
# Configured for 25.4mm stock height, 9mm spoilboard height, 6in stock width
#gcode: 
#  SET_GCODE_OFFSET x=0 y=0 z=0 
#  g0 z68 
#  g0 x322 y315 
#  g0 z64.4 
#  SET_GCODE_OFFSET x=322 y=315 z=39

#[gcode_macro TOOLCHANGE] 
#gcode: 
#  g0 z36 
#  g0 x-40 y-40 

#[gcode_macro TOOL_Z0] 
#gcode: 
#  g0 z36 
#  g0 x-40 y10 
#  g0 z0

